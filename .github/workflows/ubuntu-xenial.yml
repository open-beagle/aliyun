name: Ubuntu Xenial

on:
  push:
    branches:
      - ubuntu-xenial

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    
    env:
      BUILD_VERSION: xenial

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to Aliyun Container Registry
        uses: docker/login-action@v3
        with:
          registry: registry.cn-qingdao.aliyuncs.com
          username: ${{ secrets.REGISTRY_USER_ALIYUN }}
          password: ${{ secrets.REGISTRY_PASSWORD_ALIYUN }}

      # --- CRITICAL FIX: Replace the metadata action with this step ---
      - name: Generate tags
        id: tagger
        run: |
          IMAGE_NAME="registry.cn-qingdao.aliyuncs.com/wod/ubuntu"
          TAGS=""
          
          # Add base tags
          TAGS="${TAGS},${IMAGE_NAME}:16.04"
          TAGS="${TAGS},${IMAGE_NAME}:${{ env.BUILD_VERSION }}"
          
          # Add platform-specific tags
          for PLATFORM in amd64 arm64; do
            TAGS="${TAGS},${IMAGE_NAME}:16.04-${PLATFORM}"
            TAGS="${TAGS},${IMAGE_NAME}:${{ env.BUILD_VERSION }}-${PLATFORM}"
          done
          
          # Remove leading comma and set as output
          TAGS=$(echo $TAGS | sed 's/^,//')
          echo "tags=${TAGS}" >> $GITHUB_OUTPUT

      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: ./ubuntu
          file: ./ubuntu/Dockerfile
          platforms: linux/amd64,linux/arm64
          push: true
          # Use the tags generated from our custom script
          tags: ${{ steps.tagger.outputs.tags }}
          # We are not generating labels anymore, so remove this line
          # labels: ${{ steps.meta.outputs.labels }}
          build-args: |
            BASE=ubuntu:${{ env.BUILD_VERSION }}
            AUTHOR=${{ github.repository_owner }}
            VERSION=${{ env.BUILD_VERSION }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
          
      - name: Image push success
        run: |
          echo "Docker images and manifests pushed successfully!"
          echo "Pushed tags:"
          echo "${{ steps.tagger.outputs.tags }}"