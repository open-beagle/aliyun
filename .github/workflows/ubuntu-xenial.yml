name: Ubuntu Xenial

on:
  push:
    branches:
      - ubuntu-xenial

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    env:
      BUILD_VERSION: xenial
      IMAGE_NAME: registry.cn-qingdao.aliyuncs.com/wod/ubuntu

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to Aliyun Container Registry
        uses: docker/login-action@v3
        with:
          registry: registry.cn-qingdao.aliyuncs.com
          username: ${{ secrets.REGISTRY_USER_ALIYUN }}
          password: ${{ secrets.REGISTRY_PASSWORD_ALIYUN }}

      # --- 关键修正：分三步进行构建和推送 ---

      # 第 1 步：构建并推送多架构镜像，只打多架构标签
      - name: Build and push multi-platform image
        uses: docker/build-push-action@v5
        with:
          context: ./ubuntu
          file: ./ubuntu/Dockerfile
          platforms: linux/amd64,linux/arm64
          push: true
          tags: |
            ${{ env.IMAGE_NAME }}:16.04
            ${{ env.IMAGE_NAME }}:${{ env.BUILD_VERSION }}
          build-args: |
            BASE=ubuntu:${{ env.BUILD_VERSION }}
          # 开启缓存，为后续步骤加速
          cache-from: type=gha
          cache-to: type=gha,mode=max

      # 第 2 步：构建并推送 AMD64 镜像，只打 amd64 专属标签
      - name: Build and push AMD64-specific image
        uses: docker/build-push-action@v5
        with:
          context: ./ubuntu
          file: ./ubuntu/Dockerfile
          platforms: linux/amd64
          push: true
          tags: |
            ${{ env.IMAGE_NAME }}:16.04-amd64
            ${{ env.IMAGE_NAME }}:${{ env.BUILD_VERSION }}-amd64
          build-args: |
            BASE=ubuntu:${{ env.BUILD_VERSION }}
          # 使用缓存，此步骤会非常快
          cache-from: type=gha
          cache-to: type=gha,mode=max

      # 第 3 步：构建并推送 ARM64 镜像，只打 arm64 专属标签
      - name: Build and push ARM64-specific image
        uses: docker/build-push-action@v5
        with:
          context: ./ubuntu
          file: ./ubuntu/Dockerfile
          platforms: linux/arm64
          push: true
          tags: |
            ${{ env.IMAGE_NAME }}:16.04-arm64
            ${{ env.IMAGE_NAME }}:${{ env.BUILD_VERSION }}-arm64
          build-args: |
            BASE=ubuntu:${{ env.BUILD_VERSION }}
          # 使用缓存，此步骤会非常快
          cache-from: type=gha
          cache-to: type=gha,mode=max

      - name: All builds complete
        run: echo "All images and tags pushed successfully!"